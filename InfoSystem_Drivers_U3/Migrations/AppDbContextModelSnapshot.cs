// <auto-generated />
using System;
using InfoSystem_Drivers_U3.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;


#nullable disable

namespace InfoSystem_Drivers_U3.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InfoSystem_Drivers_U3.Models.Driver", b =>
                {
                    b.Property<int>("DriverID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DriverID"));

                    b.Property<decimal>("BeloppIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeloppUt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CarReg")
                        .IsRequired()
                        .HasColumnType("nvarChar(7)");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarChar(50)");

                    b.Property<DateTime>("NoteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoteDescription")
                        .HasColumnType("nvarChar(150)");

                    b.Property<string>("ResponsibleEmployee")
                        .IsRequired()
                        .HasColumnType("nvarChar(50)");

                    b.Property<decimal>("TotalBeloppIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBeloppUt")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("DriverID");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            DriverID = 1,
                            BeloppIn = 1000.00m,
                            BeloppUt = 200.00m,
                            CarReg = "OAG112",
                            DriverName = "Steffe",
                            NoteDate = new DateTime(2024, 10, 26, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1135),
                            NoteDescription = "Delivered supplies",
                            ResponsibleEmployee = "Steffe",
                            TotalBeloppIn = 1000.00m,
                            TotalBeloppUt = 200.00m
                        },
                        new
                        {
                            DriverID = 2,
                            BeloppIn = 0.00m,
                            BeloppUt = 500.00m,
                            CarReg = "OKO340",
                            DriverName = "Roffe",
                            NoteDate = new DateTime(2024, 10, 23, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1158),
                            NoteDescription = "Added Fuel",
                            ResponsibleEmployee = "Jonas",
                            TotalBeloppIn = 0.00m,
                            TotalBeloppUt = 500.00m
                        },
                        new
                        {
                            DriverID = 3,
                            BeloppIn = 1000.00m,
                            BeloppUt = 100.00m,
                            CarReg = "UFG198",
                            DriverName = "Anita",
                            NoteDate = new DateTime(2024, 10, 24, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1179),
                            NoteDescription = "Delivered supplies",
                            ResponsibleEmployee = "Helene",
                            TotalBeloppIn = 1000.00m,
                            TotalBeloppUt = 100.00m
                        },
                        new
                        {
                            DriverID = 4,
                            BeloppIn = 2000.00m,
                            BeloppUt = 200.00m,
                            CarReg = "KAD441",
                            DriverName = "Håkan",
                            NoteDate = new DateTime(2024, 10, 24, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1198),
                            NoteDescription = "Delivered supplies",
                            ResponsibleEmployee = "Jonas",
                            TotalBeloppIn = 2000.00m,
                            TotalBeloppUt = 200.00m
                        },
                        new
                        {
                            DriverID = 5,
                            BeloppIn = 1000.00m,
                            BeloppUt = 500.00m,
                            CarReg = "PUG962",
                            DriverName = "Ellen",
                            NoteDate = new DateTime(2024, 10, 23, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1215),
                            NoteDescription = "Delivered supplies",
                            ResponsibleEmployee = "Jonas",
                            TotalBeloppIn = 1000.00m,
                            TotalBeloppUt = 500.00m
                        });
                });

            modelBuilder.Entity("InfoSystem_Drivers_U3.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            Email = "Chris@knug.se",
                            Name = "Chris",
                            Password = "jagärbäst",
                            Role = "Admin"
                        },
                        new
                        {
                            EmployeeID = 2,
                            Email = "Jonas.Riqqe@Driverman.com",
                            Name = "Jonas Rikke",
                            Password = "Rikke",
                            Role = "Employee"
                        },
                        new
                        {
                            EmployeeID = 3,
                            Email = "H.Ornholm@Queen.com",
                            Name = "Helene Örnholm",
                            Password = "Queen",
                            Role = "Employee"
                        });
                });

            modelBuilder.Entity("InfoSystem_Drivers_U3.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<decimal>("BeloppIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BeloppUt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DriverID")
                        .HasColumnType("int");

                    b.Property<DateTime>("NoteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoteDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventID");

                    b.HasIndex("DriverID");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventID = 1,
                            BeloppIn = 1000.00m,
                            BeloppUt = 0.00m,
                            DriverID = 1,
                            NoteDate = new DateTime(2024, 10, 23, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1238),
                            NoteDescription = "Delivered supplies"
                        },
                        new
                        {
                            EventID = 2,
                            BeloppIn = 0.00m,
                            BeloppUt = 1000.00m,
                            DriverID = 2,
                            NoteDate = new DateTime(2024, 10, 26, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1257),
                            NoteDescription = "Fueled Car"
                        },
                        new
                        {
                            EventID = 3,
                            BeloppIn = 500.00m,
                            BeloppUt = 0.00m,
                            DriverID = 3,
                            NoteDate = new DateTime(2024, 10, 22, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1272),
                            NoteDescription = "Delivered supplies"
                        },
                        new
                        {
                            EventID = 4,
                            BeloppIn = 0.00m,
                            BeloppUt = 2000.00m,
                            DriverID = 4,
                            NoteDate = new DateTime(2024, 10, 25, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1289),
                            NoteDescription = "Car Service"
                        },
                        new
                        {
                            EventID = 5,
                            BeloppIn = 1800.00m,
                            BeloppUt = 0.00m,
                            DriverID = 5,
                            NoteDate = new DateTime(2024, 10, 25, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1305),
                            NoteDescription = "Delivered supplies"
                        },
                        new
                        {
                            EventID = 6,
                            BeloppIn = 700.00m,
                            BeloppUt = 0.00m,
                            DriverID = 1,
                            NoteDate = new DateTime(2024, 10, 24, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1321),
                            NoteDescription = "Delivered supplies"
                        },
                        new
                        {
                            EventID = 7,
                            BeloppIn = 1200.00m,
                            BeloppUt = 0.00m,
                            DriverID = 2,
                            NoteDate = new DateTime(2024, 10, 23, 14, 56, 18, 329, DateTimeKind.Local).AddTicks(1336),
                            NoteDescription = "Delivered supplies"
                        });
                });

            modelBuilder.Entity("InfoSystem_Drivers_U3.Models.Event", b =>
                {
                    b.HasOne("InfoSystem_Drivers_U3.Models.Driver", "Driver")
                        .WithMany("Events")
                        .HasForeignKey("DriverID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");
                });

            modelBuilder.Entity("InfoSystem_Drivers_U3.Models.Driver", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
